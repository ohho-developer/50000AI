# Generated by Django 5.2.7 on 2025-10-09 12:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RecipeSearchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField(verbose_name='검색 키워드')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='검색 시간')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_searches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '레시피 검색 기록',
                'verbose_name_plural': '레시피 검색 기록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FavoriteRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(max_length=20, verbose_name='YouTube 비디오 ID')),
                ('title', models.CharField(max_length=200, verbose_name='레시피 제목')),
                ('channel_name', models.CharField(max_length=100, verbose_name='채널명')),
                ('thumbnail_url', models.URLField(verbose_name='썸네일 URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='즐겨찾기 추가 시간')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_recipes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '즐겨찾기 레시피',
                'verbose_name_plural': '즐겨찾기 레시피',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'video_id')},
            },
        ),
    ]
